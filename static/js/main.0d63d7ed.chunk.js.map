{"version":3,"sources":["components/fetchJSON.tsx","contracts/offline.ts","server.ts","denyList/Denylist.tsx","web3/fetchAccountData.ts","web3/onConnect.ts","index.tsx","components/DisplayError.tsx","components/Loading.tsx","profiles/Avatar.tsx","profiles/User.tsx","comms/LayerInfo.tsx","comms/Comms.tsx","components/DisplayObject.tsx","dashboard/index.tsx","profiles/Profile.tsx","profiles/ProfilesGrid.tsx","profiles/Profiles.tsx","components/LinkContent.tsx","components/Position.tsx","scenes/ScenesList.tsx","scenes/SceneGrid.tsx","scenes/Scenes.tsx","layout/Main.tsx","layout/Sidebar.tsx","layout/DAOList.tsx","layout/Header.tsx","layout/App.tsx"],"names":["fetchJSON","url","args","fetch","then","res","json","catalysts","owner","domain","server","getFromStorage","key","raw","window","localStorage","getItem","JSON","parse","saveToStorage","value","setItem","stringify","getEphemeralIdentity","account","privateKey","fromPrivate","Buffer","from","buffer","result","crypto","getRandomValues","create","toString","address","publicKey","getSignatureChain","provider","ephemeral","a","eth","Eth","fromCurrentProvider","getAccounts","addresses","chain","Date","expiration","getTime","Account","payload","bufferToHex","Number","Authenticator","initializeAuthChain","message","Web3","personal","sign","identity","getIdentity","ephemeralIdentity","denyBy","type","ev","data","document","getElementById","timestamp","selectedAddress","signature","contentServer","method","headers","body","blocker","Address","fromString","console","log","catch","_","preventDefault","Denylist","useSWR","useState","setProvider","setIdentity","connect","useCallback","onConnect","providerConnect","catalystOwner","filter","length","map","target","id","toLowerCase","onSubmit","className","name","fetchAccountData","web3","getChainId","chainId","EvmChains","getChain","chainData","accounts","selectedAccount","WalletConnectProvider","require","web3Modal","Web3Modal","network","providerOptions","walletconnect","package","options","infuraId","on","ReactDOM","render","StrictMode","DisplayError","props","error","stack","Loading","Avatar","userInfo","metadata","avatars","avatar","snapshots","face","width","alt","src","position","rel","href","join","serverName","layer","shortenAddress","commsServer","User","peer","parcel","LayerInfo","users","addressFilter","usersCount","user","startsWith","substr","Comms","comms","error1","layers","layerName","DisplayObject","content","object","Object","keys","Dashboard","commsData","error2","lambdaData","error3","Profile","profile","moment","fromNow","ProfilesGrid","profiles","Profiles","events","entityType","slice","entityId","LinkContent","hash","Position","coordinate","DisplayScene","scene","display","title","pointers","base","SceneGrid","scenes","Scenes","Main","children","Sidebar","areas","active","onClick","navigate","setActive","DAOList","Header","routes","App","location","pathname","split","RouteResult","useRoutes"],"mappings":"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","file":"static/js/main.0d63d7ed.chunk.js","sourcesContent":["export function fetchJSON(url: string, ...args: any[]) {\n  return fetch(url, ...args).then((res: any) => res.json());\n}\n","export const catalysts = [\n  { owner: \"0x75e1d32289679dfcB2F01fBc0e043B3d7F9Cd443\", domain: \"interconnected.online\" },\n  { owner: \"0xFE95E04A628087FCdD5f278E61F148B47471Af4A\", domain: \"peer.decentraland.org\" },\n  { owner: \"0x6327Ef6bAE918584B86AcfD58bDEB6EF9211e371\", domain: \"peer.melonwave.com\" },\n  { owner: \"0xF78Dfd2a940c1c204d9eb5D1fF7988b7AEC3F01a\", domain: \"peer.kyllian.me\" },\n  { owner: \"0xa7C825BB8c2C4d18288af8efe38c8Bf75A1AAB51\", domain: \"peer.decentral.games\" },\n  { owner: \"0x3f95F857F89357fb1592C74dEd1f4556c6272edB\", domain: \"peer.uadevops.com\" },\n  { owner: \"0x3d7C732f54f7D60d14eabca8A7Da3097cEc3AF1e\", domain: \"peer.dclnodes.io\" },\n  { owner: \"0xEfc549434A03756F6e37A43757a2927605D8839B\", domain: \"peer-eu1.decentraland.org\" },\n  { owner: \"0xe5d0c3fEA1e5F01CA4098e9580B93B3b5d0Ea768\", domain: \"peer-ec1.decentraland.org\" },\n  { owner: \"0x4eAC6325e1DBF1Ac90434d39766e164Dca71139E\", domain: \"peer-wc1.decentraland.org\" },\n  { owner: \"0x52D4d46E28dc72b1CEf2Cb8eb5eC75Dd12BC4dF3\", domain: \"decentraland.org.cn\" },\n];\n","export const server = 'interconnected.online'","import { Authenticator, AuthIdentity, IdentityType } from 'dcl-crypto'\nimport React, { useCallback, useState } from 'react'\nimport useSWR from 'swr'\nimport Web3 from 'web3'\nimport { Account } from 'web3x/account'\nimport { Address } from 'web3x/address'\nimport { Eth } from 'web3x/eth'\nimport { create, fromPrivate } from 'web3x/eth-lib/account'\nimport { bufferToHex } from 'web3x/utils'\nimport { fetchJSON } from '../components/fetchJSON'\nimport { catalysts } from '../contracts/offline'\nimport { contentServer } from '../layout/App'\nimport { server } from '../server'\nimport { onConnect } from '../web3/onConnect'\n\nexport function getFromStorage(key: string): any {\n  let raw = window.localStorage.getItem(key)\n  if (!raw) {\n    return null\n  }\n  return JSON.parse(raw)\n}\nexport function saveToStorage(key: string, value: any): any {\n  return window.localStorage.setItem(key, JSON.stringify(value))\n}\n\nfunction getEphemeralIdentity(): IdentityType {\n  let privateKey = window.localStorage.getItem('dcl-crypto-ephemeral')\n  let account\n  if (!privateKey) {\n    const buffer = new Buffer(32)\n    const result = window.crypto.getRandomValues(buffer)\n    account = create(result)\n    window.localStorage.setItem('dcl-crypto-ephemeral', account.privateKey.toString('hex'))\n  } else {\n    account = fromPrivate(Buffer.from(privateKey, 'hex'))\n  }\n  return {\n    address: account.address,\n    privateKey: account.privateKey.toString('hex'),\n    publicKey: account.publicKey.toString('hex'),\n  }\n}\n\nasync function getSignatureChain(provider: any, ephemeral: IdentityType) {\n  const eth = Eth.fromCurrentProvider()!\n  const addresses = await eth.getAccounts()\n  const address = addresses[0]\n  const chain = getFromStorage('dcl-crypto-chain-' + address)\n  if (!chain || new Date(chain.expiration).getTime() < new Date().getTime()) {\n    const account = Account.create()\n\n    const payload = {\n      address: account.address.toString(),\n      publicKey: bufferToHex(account.publicKey),\n      privateKey: bufferToHex(account.privateKey),\n    }\n\n    const ONE_MONTH_MILLISECONDS = 31 * 24 * 60 * 60 * 1000\n    const expiration = Number(ONE_MONTH_MILLISECONDS)\n\n    const identity = await Authenticator.initializeAuthChain(address.toString(), payload, expiration, (message) =>\n      new Web3(provider).eth.personal.sign(message, address.toString(), '')\n    )\n    saveToStorage('dcl-crypto-chain-' + address, identity)\n    return identity\n  } else {\n    return chain\n  }\n}\n\nasync function getIdentity(provider: any) {\n  const ephemeralIdentity: IdentityType = getEphemeralIdentity()\n  return getSignatureChain(provider, ephemeralIdentity)\n}\n\nexport function denyBy(type: string, provider: any, identity: AuthIdentity) {\n  return (ev: any) => {\n    const data = (document.getElementById('deny-' + type) as any).value\n    const timestamp = new Date().getTime()\n    const payload = `${type}-${data}` + timestamp\n    const address = provider.selectedAddress\n    new Web3(provider).eth.personal.sign(payload, address, '').then((signature) => {\n      fetch(`${contentServer}denylist/${type}/${data}`, {\n        method: 'PUT',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify({\n          blocker: Address.fromString(address).toString(),\n          timestamp,\n          signature,\n        }),\n      })\n        .then((result) => {\n          console.log(result, timestamp, signature)\n        })\n        .catch((_) => {\n          console.log(_)\n        })\n    })\n    ev.preventDefault()\n    return false\n  }\n}\n\nexport function Denylist() {\n  const { data } = useSWR(contentServer + 'denylist', fetchJSON)\n  const [provider, setProvider]: any = useState(null)\n  const [identity, setIdentity]: any = useState(null)\n  const connect = useCallback((ev: any) => {\n    onConnect().then(async (providerConnect) => {\n      setProvider(providerConnect)\n      setIdentity(await getIdentity(providerConnect))\n    })\n    ev.preventDefault()\n    return false\n  }, [])\n  const catalystOwner = catalysts.filter((_: any) => _.domain === server)[0].owner.toString()\n  return (\n    <div>\n      <h3>Denylist Management</h3>\n      <h4>Catalyst Owner: {catalystOwner}</h4>\n      <h4>Current Deny List</h4>\n      {data && data.length ? (\n        <ul>\n          {data\n            .map((_: any) => _.target)\n            .map((_: any) => (\n              <li>\n                {_.type}: {_.id}\n              </li>\n            ))}\n        </ul>\n      ) : (\n        <h5>Empty</h5>\n      )}\n      {provider ? (\n        provider.selectedAddress.toLowerCase() === catalystOwner.toLowerCase() ? (\n          <>\n            <h5>Deny by deployer address</h5>\n            <form onSubmit={denyBy('address', provider, identity)}>\n              <input className=\"input-denylist\" name=\"address\" id=\"deny-address\"></input>\n              <button type=\"submit\">Submit</button>\n            </form>\n            <h5>Deny by content hash</h5>\n            <form onSubmit={denyBy('content', provider, identity)}>\n              <input className=\"input-denylist\" name=\"content\" id=\"deny-content\"></input>\n              <button type=\"submit\">Submit</button>\n            </form>\n            <h5>Deny by entity id</h5>\n            <form onSubmit={denyBy('entity', provider, identity)}>\n              <input className=\"input-denylist\" name=\"entity\" id=\"deny-entity\"></input>\n              <button type=\"submit\">Submit</button>\n            </form>\n            <h5>Deny by parcel coordinate</h5>\n            <form onSubmit={denyBy('pointer', provider, identity)}>\n              <input className=\"input-denylist\" name=\"pointer\" id=\"deny-pointer\"></input>\n              <button type=\"submit\">Submit</button>\n            </form>\n          </>\n        ) : (\n          <>\n            <h4>Log in as the catalyst owner to access the denylist</h4>\n            <h5>The current address is {provider.selectedAddress}</h5>\n          </>\n        )\n      ) : (\n        <>\n          <h4>Login to manage the denylists</h4>\n          <form onSubmit={connect}>\n            <button type=\"submit\">Connect</button>\n          </form>\n        </>\n      )}\n    </div>\n  )\n}\n","import Web3 from 'web3'\nimport EvmChains from 'evm-chains'\n/**\n * Kick in the UI action after Web3modal dialog has chosen a provider\n */\nexport async function fetchAccountData(provider: any) {\n  // Get a Web3 instance for the wallet\n  const web3 = new Web3(provider)\n  // Get connected chain id from Ethereum node\n  const chainId = await web3.eth.getChainId()\n  // Load chain information over an HTTP API\n  const chainData = await EvmChains.getChain(chainId)\n  // Get list of accounts of the connected wallet\n  const accounts = await web3.eth.getAccounts()\n\n  return {\n    selectedAccount: accounts[0],\n    chainData,\n    chainId,\n  }\n}\n","import Web3Modal from 'web3modal'\nimport { fetchAccountData } from './fetchAccountData'\nconst WalletConnectProvider = require('@walletconnect/web3-provider')\n\nconst web3Modal = new Web3Modal({\n  network: 'mainnet',\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        infuraId: '6ce1ac70b1af451d9c81c2d60453e3c3',\n      },\n    },\n  },\n})\n\n/**\n * Connect wallet button pressed.\n */\nexport async function onConnect() {\n  try {\n    const provider = await web3Modal.connect()\n    provider.on('accountsChanged', () => {\n      fetchAccountData(provider)\n    })\n    provider.on('chainChanged', () => {\n      fetchAccountData(provider)\n    })\n    provider.on('networkChanged', () => {\n      fetchAccountData(provider)\n    })\n    return provider\n  } catch (e) {\n    console.log('Could not get a wallet connection', e)\n    return\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layout/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React from \"react\";\n\nexport function DisplayError(props: { error: any }) {\n  const error = props.error;\n  return error ? (\n    <div>\n      <h2>Error!</h2>\n      <pre>\n        {error.message}: <br />\n        {error.stack}\n      </pre>\n    </div>\n  ) : (\n    <div />\n  );\n}\n","import React from \"react\";\nexport function Loading() {\n    return <div>Loading...</div>;\n}\n","import React from \"react\";\nimport { shortenAddress } from \"../comms/Comms\";\nexport function Avatar(props: { userInfo: any; address: string; contentServer: string; position: number[]; serverName: string; layer: string }) {\n  if (props.userInfo) {\n    if (\n      props.userInfo.length &&\n      props.userInfo[0].metadata &&\n      props.userInfo[0].metadata.avatars &&\n      props.userInfo[0].metadata.avatars.length &&\n      props.userInfo[0].metadata.avatars[0].avatar &&\n      props.userInfo[0].metadata.avatars[0].avatar.snapshots &&\n      props.userInfo[0].metadata.avatars[0].avatar.snapshots.face\n    ) {\n      return (\n        <div>\n          <img width={50} alt=\"User avatar\" src={props.contentServer + \"contents/\" + props.userInfo[0].metadata.avatars[0].avatar.snapshots.face} />\n          &nbsp;\n          {props.userInfo[0].metadata.avatars[0].name}\n          &nbsp; (\n          {props.position ? (\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://play.decentraland.org/?position=${props.position.join(\",\")}&realm=${props.serverName}-${props.layer}`}>\n              {props.position[0]}, {props.position[1]}\n            </a>\n          ) : (\n            \"unknown position\"\n          )}\n          )\n        </div>\n      );\n    }\n  }\n  if (!props.position || !props.position.length) {\n    return (\n      <div>\n        <img width={50} alt=\"Default avatar\" src={props.contentServer + \"contents/QmeLTsRbiPpgW5ir1q1Ny3dG5znDGRSvWZCBuMgkxV7us9\"} />\n      </div>\n    );\n  }\n  return (\n    <div>\n      <img width={50} alt=\"Default avatar\" src={props.contentServer + \"contents/QmeLTsRbiPpgW5ir1q1Ny3dG5znDGRSvWZCBuMgkxV7us9\"} />\n      &nbsp;\n      {shortenAddress(props.address)}\n      &nbsp; (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://play.decentraland.org/?position=${props.position.join(\",\")}&realm=${props.serverName}-${props.layer}`}>\n        {props.position[0]}, {props.position[1]}\n      </a>\n      )\n    </div>\n  );\n}\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport { fetchJSON } from \"../components/fetchJSON\";\nimport { Loading } from \"../components/Loading\";\nimport { server } from \"../server\";\nimport { Avatar } from \"./Avatar\";\n\nconst commsServer = \"https://\" + server + \"/comms/\";\nconst contentServer = \"https://\" + server + \"/content/\";\n\nexport function User(props: { address: string; layer: string; serverName: string }) {\n  const { data } = useSWR(commsServer + \"layers/\" + props.layer + \"/rooms/\" + props.address, fetchJSON);\n  const { data: userInfo } = useSWR(contentServer + \"entities/profile?pointer=\" + props.address, fetchJSON);\n  if (!data || !data.length) {\n    return <Loading />;\n  }\n  const peer = data[0];\n  return (\n    <div>\n      <Avatar address={props.address} userInfo={userInfo} contentServer={contentServer} position={peer.parcel} layer={props.layer} serverName={props.serverName} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport { fetchJSON } from \"../components/fetchJSON\";\nimport { addressFilter } from \"./Comms\";\nimport { User } from \"../profiles/User\";\nimport { server } from \"../server\";\n\nconst commsServer = \"https://\" + server + \"/comms/\";\n\nexport function LayerInfo(props: { name: string; serverName: string; layerName: string; usersCount: number; maxUsers: number }) {\n  const { data } = useSWR(commsServer + \"layers/\" + props.name + \"/rooms\", fetchJSON);\n  const users = data && data.filter(addressFilter);\n  return (\n    <div>\n      <h4>\n        <strong>{props.name}:</strong> {props.usersCount} user{props.usersCount === 1 ? '' : 's'}\n      </h4>\n      {users && users.map((user: string) => <User key={user} address={user} serverName={props.serverName} layer={props.name} />)}\n    </div>\n  );\n}\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport { DisplayError } from \"../components/DisplayError\";\nimport { fetchJSON } from \"../components/fetchJSON\";\nimport { Loading } from \"../components/Loading\";\nimport { LayerInfo } from \"./LayerInfo\";\nimport { server } from \"../server\";\n\nexport const addressFilter = (_: string) => _.startsWith(\"0x\");\n\nexport const shortenAddress = (address: string) => [address.substr(0, 6), address.substr(-4)].join(\"...\");\n\nexport const commsServer = `https://${server}/comms/`;\n\nexport function Comms() {\n  const { data: comms, error: error1 } = useSWR(commsServer + \"status\", fetchJSON);\n  const { data, error } = useSWR(commsServer + \"layers\", fetchJSON);\n  const layers = data ? data.filter((_: any) => _.usersCount > 0) : [];\n  if (!layers) {\n    return <Loading />;\n  }\n  return (\n    <div>\n      <h3>\n        Comms{\" \"}\n        {comms && (\n          <span>\n            ({layers.length} layer{layers.length !== 1 ? \"s\" : \"\"} with users)\n          </span>\n        )}{\" \"}\n      </h3>\n      {comms && (\n        <>\n          {layers.map((_: any) => (\n            <LayerInfo {..._} key={_.name} serverName={comms.name} layerName={_.name} />\n          ))}\n        </>\n      )}\n      <DisplayError error={error} />\n      <DisplayError error={error1} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function DisplayObject(props: { object: any }) {\n  const content = props.object;\n  return (\n    <ul>\n      {content &&\n        Object.keys(content).map((_) => {\n          return (\n            <li key={_}>\n              {_}: <strong>{typeof content[_] === \"object\" ? \"object\" : content[_]}</strong>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport { DisplayError } from \"../components/DisplayError\";\nimport { DisplayObject } from \"../components/DisplayObject\";\nimport { fetchJSON } from \"../components/fetchJSON\";\nimport { server } from \"../server\";\n\nexport function Dashboard() {\n  const { data, error } = useSWR(\"https://\" + server + \"/content/status\", fetchJSON);\n  const { data: commsData, error: error2 } = useSWR(\"https://\" + server + \"/comms/status\", fetchJSON);\n  const { data: lambdaData, error: error3 } = useSWR(\"https://\" + server + \"/lambdas/status\", fetchJSON);\n  return (\n    <div>\n      <h2>Server status</h2>\n      <h3>Content</h3>\n      {data && <DisplayObject object={data} />}\n      <h3>Comms</h3>\n      {commsData && <DisplayObject object={commsData} />}\n      <h3>Lambdas</h3>\n      {lambdaData && <DisplayObject object={lambdaData} />}\n      {error && <DisplayError error={error} />}\n      {error2 && <DisplayError error={error2} />}\n      {error3 && <DisplayError error={error3} />}\n    </div>\n  );\n}\n","import moment from \"moment\";\nimport React from \"react\";\nimport { shortenAddress } from \"../comms/Comms\";\nimport { contentServer } from \"../layout/App\";\n\nexport function Profile(props: { profile: any }) {\n  const data = props.profile.metadata.avatars[0];\n  return (\n    <div>\n      <img width={50} alt=\"User avatar\" src={contentServer + \"contents/\" + data.avatar.snapshots.face} />\n      <strong>{data.name || shortenAddress(props.profile.id)}</strong>: updated {moment(props.profile.timestamp).fromNow()} <br />\n    </div>\n  );\n}\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport { DisplayError } from \"../components/DisplayError\";\nimport { fetchJSON } from \"../components/fetchJSON\";\nimport { Profile } from \"./Profile\";\nimport { contentServer } from \"../layout/App\";\nexport function ProfilesGrid(props: {\n  profiles: string[];\n}) {\n  const { data, error } = useSWR(contentServer + \"entities/profiles?id=\" + props.profiles.join(\"&id=\"), fetchJSON);\n  return (<div>\n    <h3>Last Submitted Profiles</h3>\n    {data && data.map((_: any) => <Profile profile={_} />)}\n    {error && <DisplayError error={error} />}\n  </div>);\n}\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport { fetchJSON } from \"../components/fetchJSON\";\nimport { ProfilesGrid } from \"./ProfilesGrid\";\nimport { contentServer } from \"../layout/App\";\nexport function Profiles() {\n  const { data } = useSWR(contentServer + \"history\", fetchJSON);\n  return (\n    <div>\n      {data && (\n        <ProfilesGrid\n          profiles={data.events\n            .filter((_: any) => _.entityType === \"profile\")\n            .slice(0, 10)\n            .map((_: any) => _.entityId)}\n        />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { contentServer } from \"../layout/App\";\n\nexport function LinkContent(props: { hash: string }) {\n  return (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${contentServer}contents/${props.hash}`}>\n      {props.hash}\n    </a>\n  );\n}\n","import React from \"react\";\nexport function Position(props: {\n  coordinate: string;\n}) {\n  return (<a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://play.decentraland.org/?position=${props.coordinate}`}>\n    {props.coordinate}\n  </a>);\n}\n","import React from 'react'\nimport moment from 'moment';\nimport { LinkContent } from '../components/LinkContent';\nimport { Position } from '../components/Position';\n\nexport function DisplayScene(props: { scene: any }) {\n  const name = props.scene?.metadata?.display?.title || \"Untitled scene\";\n  const length = props.scene?.pointers.length;\n  return (\n    <div>\n      <p>\n        <strong>{name}</strong> ({length} parcel{length === 1 ? \"\" : \"s\"}, base: <Position coordinate={props.scene?.metadata?.scene?.base} />)\n        <br/>\n        Deployed {moment(props.scene.timestamp).fromNow()} <br/>id: <LinkContent hash={props.scene.id} /> \n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport { DisplayError } from \"../components/DisplayError\";\nimport { fetchJSON } from \"../components/fetchJSON\";\nimport { contentServer } from \"../layout/App\";\nimport { DisplayScene } from \"./ScenesList\";\n\nexport function SceneGrid(props: { scenes: string[] }) {\n  const { data, error } = useSWR(contentServer + \"entities/scenes?id=\" + props.scenes.join(\"&id=\"), fetchJSON);\n  return (\n    <div>\n      <h3>Last Submitted Scenes</h3>\n      {data && data.map((_: any) => <DisplayScene scene={_} />)}\n      {error && <DisplayError error={error} />}\n    </div>\n  );\n}\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport { fetchJSON } from \"../components/fetchJSON\";\nimport { contentServer } from \"../layout/App\";\nimport { SceneGrid } from \"./SceneGrid\";\n\nexport function Scenes() {\n  const { data } = useSWR(contentServer + \"history\", fetchJSON);\n  return (\n    <div>\n      {data && (\n        <SceneGrid\n          scenes={data.events\n            .filter((_: any) => _.entityType === \"scene\")\n            .slice(0, 10)\n            .map((_: any) => _.entityId)}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react'\nexport function Main(props: { children?: any }) {\n  return <div className=\"main\">{props.children}</div>\n}\n","import React from \"react\";\nimport { navigate } from \"hookrouter\";\nexport function Sidebar(props: { active: string; setActive: (path: string) => void }) {\n  const areas: any[] = [\n    [\"/\", \"\", \"header link\", \"Catalyst Manager\"],\n    [\"/comms\", \"comms\", \"link\", \"Comms\"],\n    [\"/scenes\", \"scenes\", \"link\", \"Scenes\"],\n    [\"/profiles\", \"profiles\", \"link\", \"Profiles\"],\n    [\"/denylist\", \"denylist\", \"link\", \"Denylist\"],\n    [\"/dao\", \"dao\", \"link\", \"DAO\"],\n  ].map((_) => {\n    const url = _[0];\n    if (url === props.active) {\n      _[2] = _[2] + \" active\";\n    }\n    return _\n  });\n  return (\n    <div className=\"sidebar\">\n      <ul>\n        {areas.map(([url, id, className, title]) => {\n          return (\n            <li key={id} className={className} onClick={() => [navigate(url), props.setActive(url)]}>\n              {title}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\nimport { catalysts } from '../contracts/offline';\nexport function DAOList() {\n  return (<div>\n    <h3>DAO Servers</h3>\n    <ul>\n      {catalysts.map((_) => {\n        return <li key={_.domain}>\n          <strong>{_.domain}</strong> (by {_.owner})\n          </li>;\n      })}\n    </ul>\n  </div>);\n}\n","import React from 'react';\nimport useSWR from 'swr';\nimport { commsServer } from '../comms/Comms';\nimport { fetchJSON } from '../components/fetchJSON';\nimport { server } from '../server';\nexport function Header() {\n  const { data: comms } = useSWR(commsServer + 'status', fetchJSON);\n  return (<div className=\"catalyst-header\">\n    {server}\n    {comms && `: ${comms.name}`}\n  </div>);\n}\n","import { useRoutes } from 'hookrouter'\nimport React, { useState } from 'react'\nimport { Comms } from '../comms/Comms'\nimport { Dashboard } from '../dashboard'\nimport { Profiles } from '../profiles/Profiles'\nimport { Scenes } from '../scenes/Scenes'\nimport { server } from '../server'\nimport './App.css'\nimport { Main } from './Main'\nimport { Sidebar } from './Sidebar'\nimport { Denylist } from '../denyList/Denylist'\nimport { DAOList } from './DAOList'\nimport { Header } from './Header'\n\nconst root = '/'\nconst comms = '/comms'\nconst denylist = '/denylist'\nconst scenes = '/scenes'\nconst profiles = '/profiles'\nconst dao = '/dao'\n\nexport const contentServer = `https://${server}/content/`\n\nconst routes = {\n  [root]: () => <Dashboard />,\n  [comms]: () => <Comms />,\n  [scenes]: () => <Scenes />,\n  [profiles]: () => <Profiles />,\n  [denylist]: () => <Denylist />,\n  [dao]: () => <DAOList />,\n}\n\nfunction App() {\n  const [active, setActive] = useState('/' + window.location.pathname.split('/')[1])\n  const RouteResult = useRoutes(routes)\n  return (\n    <div className=\"App\">\n      <Sidebar active={active} setActive={setActive} />\n      <Main>\n        <Header />\n        <div className=\"content\">{RouteResult}</div>\n      </Main>\n    </div>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}